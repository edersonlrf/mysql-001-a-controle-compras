1 - Não se esqueça do ";" no final das querys.
2 - Entrar no mysql instalado na maquina:
    mysql -u root -p;
3 - Criar e acessa o banco de dados:
    CREATE DATABASE controle_compras;
    use controle_compras;
4 - Criar uma tabela:
    CREATE TABLE compras (id INT AUTO_INCREMENT PRIMARY KEY, valor DOUBLE, data DATE, observacoes VARCHAR(255), recebido BOOLEAN);
5 - Inserir na tabela compras:
    INSERT INTO compras (valor, data, observacoes, recebido) VALUES (100.0, '2007-05-12', 'Compras de Maio', 1);
6 - Busca todo o conteudo da tabela:
    SELECT * FROM compras;
7 - Pega as instuções SQL no arquivo e executa no banco de dados;
    mysql -uroot -p controle_compras < cap2.sql;
8 - Busca a coluna "valor", "valor" multiplicando por 3 e dando um apelido:
    SELECT valor, valor * 3 AS triplo FROM compras;
9 - Consulta com filtro:
    SELECT * FROM compras WHERE (valor > 1000 AND data <= '2017-01-01') OR valor <> 1000;
10 - Consulta fitrando por uma parte da String:
    SELECT * FROM compras WHERE observacoes LIKE 'compras%';
11 - Para importar SQLs deslogue do MySQL e execute:
    mysql -u root -p controle_compras < cap2.sql
12 - Pode usar aspas duplas no lugar de aspas simples.
13 - O BETWEEN serve para filtrar de acordo com um intervalo (int ou data).
    SELECT * FROM compras WHERE valor BETWEEN 200 AND 700
14 - Comando usado para alterar dados, e o comando NOT para negar condição fazendo pegar o contrario.
    UPDATE compras SET observacoes = 'compra emergencial', recebido = 0 WHERE id = 2 OR data NOT BETWEEN '2010-01-05' AND '2010-06-25';
15 - Pegando varios valores para um mesmo campo com IN.
    UPDATE compras SET observacoes = 'datas festivas' WHERE DATA IN('2017-12-25', '2017-10-12', '2017-06-12');
16 - Excluir registros antes de 2009.
    DELETE FROM compras WHERE DATA < '2009-01-01';
17 - Sempre faça um SELECT para testar o WHERE antes de usar o UPDATE ou DELETE.
18 - Fazer um coluna da tabela começar a recusar NULL.
    ALTER TABLE compras MODIFY COLUMN observacoes TEXT NOT NULL;
19 - Adicionar um valor padrão para uma coluna da tabela.
    ALTER TABLE compras MODIFY COLUMN recebido TINYINT(1) DEFAULT '0';
20 - Para definir valores especificos que uma coluna pode resceber vc pode usar o ENUM().
    ALTER TABLE compras ADD COLUMN forma_pagt ENUM('cartao', 'boleto', 'dinheiro');
21 - O comando CHANGE pode ser usado para renomear uma coluna.
    ALTER TABLE compras CHANGE forma_pagt forma_pagamento ENUM('CARTAO', 'BOLETO', 'DINHEIRO');
